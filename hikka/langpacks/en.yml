settings:
  name: "Settings"
  too_many_args: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Too many args</b>"
  blacklisted: "<emoji document_id=5197474765387864959>👍</emoji> <b>Chat {} blacklisted from userbot</b>"
  unblacklisted: "<emoji document_id=5197474765387864959>👍</emoji> <b>Chat {} unblacklisted from userbot</b>"
  user_blacklisted: "<emoji document_id=5197474765387864959>👍</emoji> <b>User {} blacklisted from userbot</b>"
  user_unblacklisted: "<emoji document_id=5197474765387864959>👍</emoji> <b>User {} unblacklisted from userbot</b>"
  what_prefix: "<emoji document_id=5382187118216879236>❓</emoji> <b>What should the prefix be set to?</b>"
  prefix_incorrect: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Prefix must be one symbol in length</b>"
  prefix_set: "{} <b>Command prefix updated. Use the following command to change it back:</b>\n<pre><code class=\"language-her\">{newprefix}setprefix {oldprefix}</code></pre>"
  alias_created: "<emoji document_id=5197474765387864959>👍</emoji> <b>Alias created. Access it with</b> <code>{}</code>"
  aliases: "<b>🔗 Aliases:</b>\n"
  no_command: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Command</b> <code>{}</code> <b>does not exist</b>"
  alias_args: "<emoji document_id=5210952531676504517>🚫</emoji> <b>You must provide a command and the alias for it</b>"
  unstable: "\n\n<emoji document_id=5355133243773435190>❕</emoji> <b>You are using an unstable branch</b> <code>{}</code><b>!</b>"
  delalias_args: "<emoji document_id=5210952531676504517>🚫</emoji> <b>You must provide the alias name</b>"
  alias_removed: "<emoji document_id=5197474765387864959>👍</emoji> <b>Alias</b> <code>{}</code> <b>removed</b>."
  no_alias: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Alias</b> <code>{}</code> <b>does not exist</b>"
  db_cleared: "<emoji document_id=5197474765387864959>👍</emoji> <b>Database cleared</b>"
  confirm_cleardb: "⚠️ <b>Are you sure, that you want to clear database?</b>"
  cleardb_confirm: "🗑 Clear database"
  cancel: "🚫 Cancel"
  who_to_blacklist: "<emoji document_id=5382187118216879236>❓</emoji> <b>Who to blacklist?</b>"
  who_to_unblacklist: "<emoji document_id=5382187118216879236>❓</emoji> <b>Who to unblacklist?</b>"
  _cmd_doc_addalias: "Set an alias for a command"
  _cmd_doc_aliases: "Print all your aliases"
  _cmd_doc_blacklist: "[chat_id] [module] - Blacklist the bot from operating somewhere"
  _cmd_doc_blacklistuser: "[user_id] - Prevent this user from running any commands"
  _cmd_doc_cleardb: "Clear the entire database, effectively performing a factory reset"
  _cmd_doc_delalias: "Remove an alias for a command"
  _cmd_doc_hikka: "Get Her version"
  _cmd_doc_setprefix: "<prefix> - Sets command prefix"
  _cmd_doc_unblacklist: "<chat_id> - Unblacklist the bot from operating somewhere"
  _cmd_doc_unblacklistuser: "[user_id] - Allow this user to run permitted commands"
  _cfg_nonstandart_prefixes: "Allow non-standart prefixes like flags or more than one symbol"
  _cls_doc: "Control core userbot settings"

her_config:
  name: "HerConfig"
  choose_core: "⚙️ <b>Choose a category</b>"
  configure: "⚙️ <b>Choose a module to configure</b>"
  configure_lib: "📦 <b>Choose a library to configure</b>"
  configuring_mod: "⚙️ <b>Choose config option for mod</b> <code>{}</code>\n\n<b>Current options:</b>\n\n{}"
  configuring_lib: "📦 <b>Choose config option for library</b> <code>{}</code>\n\n<b>Current options:</b>\n\n{}"
  configuring_option: "⚙️ <b>Configuring option</b> <code>{}</code> <b>of mod</b> <code>{}</code>\n<i>ℹ️ {}</i>\n\n<b>Default: {}</b>\n\n<b>Current: {}</b>\n\n{}"
  configuring_option_lib: "📦 <b>Configuring option</b> <code>{}</code> <b>of library</b> <code>{}</code>\n<i>ℹ️ {}</i>\n\n<b>Default: {}</b>\n\n<b>Current: {}</b>\n\n{}"
  option_saved: "<emoji document_id=5318933532825888187>⚙️</emoji> <b>Option</b> <code>{}</code> <b>of module</b> <code>{}</code><b> saved!</b>\n<b>Current: {}</b>"
  option_saved_lib: "<emoji document_id=5431736674147114227>📦</emoji> <b>Option</b> <code>{}</code> <b>of library</b> <code>{}</code><b> saved!</b>\n<b>Current: {}</b>"
  option_reset: "♻️ <b>Option</b> <code>{}</code> <b>of module</b> <code>{}</code> <b>has been reset to default</b>\n<b>Current: {}</b>"
  option_reset_lib: "♻️ <b>Option</b> <code>{}</code> <b>of library</b> <code>{}</code> <b>has been reset to default</b>\n<b>Current: {}</b>"
  args: "🚫 <b>You specified incorrect args</b>"
  no_mod: "🚫 <b>Module doesn't exist</b>"
  no_option: "🚫 <b>Configuration option doesn't exist</b>"
  validation_error: "🚫 <b>You entered incorrect config value.\nError: {}</b>"
  try_again: "🔁 Try again"
  typehint: "🕵️ <b>Must be a{eng_art} {}</b>"
  set: "set"
  set_default_btn: "♻️ Reset default"
  enter_value_btn: "✍️ Enter value"
  enter_value_desc: "✍️ Enter new configuration value for this option"
  add_item_desc: "✍️ Enter item to add"
  remove_item_desc: "✍️ Enter item to remove"
  back_btn: "👈 Back"
  close_btn: "🔻 Close"
  add_item_btn: "➕ Add item"
  remove_item_btn: "➖ Remove item"
  show_hidden: "🚸 Show value"
  hide_value: "🔒 Hide value"
  builtin: "🛰 Built-in"
  external: "🛸 External"
  libraries: "📦 Libraries"
  _cmd_doc_config: "Configure modules"
  _cmd_doc_fconfig: "<module_name> <property_name> <config_value> - set the config value for the module"
  _cls_doc: "Interactive configurator for Her"

api_protection:
  name: "APILimiter"
  warning: "⚠️ <b>WARNING!</b>\n\nYour account exceeded the limit of requests, specified in config. In order to prevent Telegram API Flood, userbot has been <b>fully frozen</b> for {} seconds. Further info is provided in attached file. \n\nIt is recommended to get help in <code>{prefix}support</code> group!\n\nIf you think, that it is an intended behavior, then wait until userbot gets unlocked and next time, when you will be going to perform such an operation, use <code>{prefix}suspend_api_protect</code> &lt;time in seconds&gt;"
  args_invalid: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Invalid arguments</b>"
  suspended_for: "<emoji document_id=5458450833857322148>👌</emoji> <b>API Flood Protection is disabled for {} seconds</b>"
  on: "<emoji document_id=5458450833857322148>👌</emoji> <b>Protection enabled</b>"
  off: "<emoji document_id=5458450833857322148>👌</emoji> <b>Protection disabled</b>"
  u_sure: "<emoji document_id=5312383351217201533>⚠️</emoji> <b>Are you sure?</b>"
  _cfg_time_sample: "Time sample through which the bot will count requests"
  _cfg_threshold: "Threshold of requests to trigger protection"
  _cfg_local_floodwait: "Freeze userbot for this amount of time, if request limit exceeds"
  _cfg_forbidden_methods: "Forbid specified methods from being executed throughout external modules"
  btn_no: "🚫 No"
  btn_yes: "✅ Yes"
  web_pin: "🔓 <b>Click the button below to show Werkzeug debug PIN. Do not give it to anyone.</b>"
  web_pin_btn: "🐞 Show Werkzeug PIN"
  proxied_url: "🌐 Proxied URL"
  local_url: "🏠 Local URL"
  debugger_disabled: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Web debugger is disabled, url is not available</b>"
  _cmd_doc_debugger: "Show the Werkzeug PIN"
  _cls_doc: "Helps userbot avoid spamming Telegram API"

$validators:
  boolean: "boolean"
  positive: "positive "
  digits: " with exactly {digits} digits"
  integer_min: "{sign}integer greater than {minimum}{digits}"
  integer_range: "{sign}integer from {minimum} to {maximum}{digits}"
  integer: "{sign}integer{digits}"
  integer_max: "{sign}integer less than {maximum}{digits}"
  choice: "one of the following: {possible}"
  multichoice: "list of values, where each one must be one of: {possible}"
  each: " (each must be {each})"
  fixed_len: " (exactly {fixed_len} pcs.)"
  max_len: " (up to {max_len} pcs.)"
  len_range: " (from {min_len} to {max_len} pcs.)"
  min_len: " (at least {min_len} pcs.)"
  series: "series of values{len}{each}, separated with «,»"
  link: "link"
  string_fixed_len: "string of length {length}"
  string: "string"
  string_max_len: "string of length up to {max_len}"
  string_len_range: "string of length from {min_len} to {max_len}"
  string_min_len: "string of length at least {min_len}"
  regex: "string matching pattern «{regex}»"
  float_min: "{sign}float greater than {minimum}"
  float_range: "{sign}float from {minimum} to {maximum}"
  float: "{sign}float"
  float_max: "{sign}float less than {maximum}"
  union: "one of the following:\n"
  empty: "empty value"
  emoji_fixed_len: "{length} emojis"
  emoji_len_range: "{min_len} to {max_len} emojis"
  emoji_min_len: "at least {min_len} emoji"
  emoji_max_len: "no more than {max_len} emojis"
  emoji: "emoji"
  entity_like: "link to entity, username or Telegram ID"

$inline:
  opening_form: " <b>Opening form...</b>"
  opening_gallery: " <b>Opening gallery...</b>"
  opening_list: " <b>Opening list...</b>"
  inline403: "<emoji document_id=5210952531676504517>🚫</emoji> <b>You can't send inline units in this chat</b>"
  invoke_failed: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Unit invoke failed! More info in logs</b>"
  invoke_failed_logs: "<emoji document_id=5210952531676504517>🚫</emoji> <b>Unit invoke failed!</b>\n\n<emoji document_id=5226512880362332956>📖</emoji> <b>Logs:</b>\n\n<pre><code class=\"language-logs\">{}</code></pre>"
  show_inline_cmds: "📄 Show info"
  no_inline_cmds: "@kramiikk"
  no_inline_cmds_msg: "<b>Author @ilvij</b>"
  inline_cmds: "ℹ️ You have {} available command(-s)"
  inline_cmds_msg: "<b>ℹ️ Available inline commands:</b>\n\n{}"
  run_command: "🏌️ Run command"
  command_msg: "<b>🪐 Command «{}»</b>\n\n<i>{}</i>"
  command: "🪐 Command «{}»"
  button403: "You are not allowed to press this button!"
  keep_id: "⚠️ Do not remove ID! {}"
